Imports System.Collections.Generic
Imports System.Globalization

Namespace Huggle

    'Represents an entry in the log generated by MediaWiki's AbuseFilter extension
    'This is not integrated with other MediaWiki logs, but we attempt here to treat it as if it were

    Friend Class Abuse : Inherits LogItem

        Private _AbuseID As Integer
        Private _Diff As String

        Public Sub New(ByVal wiki As Wiki, ByVal abuseID As Integer)
            MyBase.New(0, wiki)
            _AbuseID = abuseID
            Me.Action = "abusefilter/abuse"
        End Sub

        Public ReadOnly Property AbuseID As Integer
            Get
                Return _AbuseID
            End Get
        End Property

        Public Property Diff() As String
            Get
                Return _Diff
            End Get
            Set(ByVal value As String)
                Dim headerColor As String

                Select Case Page.Space
                    Case Wiki.Spaces.Article : headerColor = "ffffff"
                    Case Wiki.Spaces.User, Wiki.Spaces.UserTalk : headerColor = "d7d7ff"
                    Case Wiki.Spaces.Project, Wiki.Spaces.ProjectTalk : headerColor = "ffd2ff"
                    Case Wiki.Spaces.Talk : headerColor = "cdffcd"
                    Case Else : headerColor = "ffe6d2"
                End Select

                '_Diff = Resources.AbusePage _
                '    .Replace("$IMAGE", If(Page.IsBlp, BlpIconHtml, "")) _
                '    .Replace("$PAGETITLE", Page.Name) _
                '    .Replace("$DIFF", value) _
                '    .Replace("$HEADERCOLOR", HeaderColor) _
                '    .Replace("$FILTERINFO", Msg("diff-filterinfo", Filter.Id, Filter.Description)) _
                '    .Replace("$FILTERACTION", If(Stopped, _
                '        "<span class='huggle-filterstopped'>" & Msg("diff-filterstopped", Result) & "</span>", _
                '        Msg("diff-filteraction", Result)))
            End Set
        End Property

        Public Property Rev() As Revision

        Public Property Filter() As AbuseFilter

        Public Overrides ReadOnly Property Label() As String
            Get
                Return "[" & Result & "] " & Filter.Id.ToStringForUser & " (" & Filter.Description & ")"
            End Get
        End Property

        Public Property Result() As String

        Public ReadOnly Property StoppedAction() As Boolean
            Get
                Return {"disallow", "warn"}.Contains(Result.ToLowerI)
            End Get
        End Property

        Public Overrides ReadOnly Property Target As String
            Get
                Return TargetUser.Name
            End Get
        End Property

        Public Property UserAction() As String

    End Class

    Friend Class AbuseCollection

        Private Wiki As Wiki

        Private ReadOnly _All As New Dictionary(Of Integer, Abuse)

        Public Sub New(ByVal wiki As Wiki)
            Me.Wiki = wiki
        End Sub

        Public ReadOnly Property All() As IList(Of Abuse)
            Get
                Return _All.Values.ToList.AsReadOnly
            End Get
        End Property

        Default Public ReadOnly Property FromID(ByVal id As Integer) As Abuse
            Get
                If Not _All.ContainsKey(id) Then _All.Add(id, New Abuse(Wiki, id))
                Return _All(id)
            End Get
        End Property

    End Class

End Namespace
